00: 01: Voice Conversion
Instructions: 

1. Use a speech recognition library to convert the given text into phonetic transcriptions.
2. Extract the character name from the text.
3. Create a dictionary mapping character names to voice file paths. 
4. Use the extracted character name to fetch the corresponding voice sample file path from the dictionary.
5. Convert the fetched voice sample file into text-to-speech using a text-to-speech engine.
6. Save the generated speech as an audio file.

02: File Management
Instructions:

1. Read the given text file containing the transcribed text.
2. Pass the transcribed text to 01 for voice conversion.
3. Receive the audio file generated by 01.
4. Save the audio file in the specified location: C:/Program Files (x86)/Steam/steamapps/common/Umineko/sound/voice/09.
5. Repeat the process for each line of text in the input file, if applicable.
01 Overseer: To-do:
1. Use a speech recognition library to convert the given text into phonetic transcriptions. (In progress)
2. Extract the character name from the text. (Not started)
3. Create a dictionary mapping character names to voice file paths. (Not started)
4. Use the extracted character name to fetch the corresponding voice sample file path from the dictionary. (Not started)
5. Convert the fetched voice sample file into text-to-speech using a text-to-speech engine. (Not started)
6. Save the generated speech as an audio file. (Not started)

Current instruction for you:
Please implement step 2 - Extract the character name from the text.
01: Fetch: None
File name: extract_character.py
Code:
```python
def extract_character(text):
    character_name = ""
    # logic to extract character name from text
    # character_name = ...

    return character_name
```
01 Overseer: To-do:
1. Use a speech recognition library to convert the given text into phonetic transcriptions. (Not started)
2. Extract the character name from the text. (In progress)
3. Create a dictionary mapping character names to voice file paths. (Not started)
4. Use the extracted character name to fetch the corresponding voice sample file path from the dictionary. (Not started)
5. Convert the fetched voice sample file into text-to-speech using a text-to-speech engine. (Not started)
6. Save the generated speech as an audio file. (Not started)

Current instruction for you (01): Write the logic in the `extract_character` function to extract the character name from the given text. Please replace the comment with your code.
scribe: ******
File name: extract_character.py
Content: This file contains a function called `extract_character` which takes a text string as input and returns the extracted character name from the text. The function utilizes a logic to extract the character name from the given text.
01: Fetch: user_documentation.txt
