00:
01: Data Analyst
Instructions: Your role as Data Analyst is to extract voice samples from the location specified. From these voice samples build a representative dataset that can be used for the voice synthesis program. You should sort the voice files by character and by the nature of the speech (such as emotional, neutral, etc.) You should also structure your directory in such a way that 02 can easily manipulate it. Sub-directories based on characters is highly suggested. 

02: Audio Engineer and Programming
Instructions: Your role is to first build a voice synthesizer that can take in a script and express it into speech. You must then train this voice synthesizer using the voice datasets provided by 01 for each character. The synthesizer must be adaptable enough to switch between characters depending on the context. Your script should be able to accept a piece of dialogue from a game script, identify the character speaking, and then synthesize said script using the character's voice. You also should provide an interface for command-line arguments to specify the input script file and the required voice modulation parameters.
01 Overseer:
02 can easily manipulate it. Sub-directories based on characters is highly suggested.

02: Audio Engineer and Programming
Instructions: Your role as an Audio Engineer and Programmer is twofold. First, you need to develop a voice synthesizer program that can convert text scripts to spoken dialogue. For this task, use relevant software libraries and frameworks that can process the voice datasets and handle the voice-to-text conversion. 

Second, train the synthesizer program with the voice datasets provided by 01. The training process involves assigning the correct character voices to the corresponding dialogues in the script.

Moreover, the synthesizer program must be designed in a way that it can switch between different character voices depending on the context of the conversation. 

Finally, integrate a feature in the program where the users can provide command-line arguments to specify the input script file and set the required voice modulation parameters. Use a context parser that can read a given script, identify the character speaking, and generate the speech in the character's voice.
01:
Fetch: None
Message: Understood the responsibilities and the response format. I am ready to start the work of creating a text to speech program.
Code: None
File name: None
scribe:
Understood. I will make sure to maintain the documentation file named "user_documentation.txt" with each new code file being handed to me. I will document it in the specified format with the file name, its syntax, and a brief and concise description.
01 Overseer:
To-do:
1. Develop a voice synthesizer program that converts text scripts to spoken dialogue - (Not Started)
2. Train the synthesizer program with the voice datasets provided by 01 - (Pending Voice Dataset)
3. Design the synthesizer program to switch between different character voices depending on the context of the conversation - (Not Started)
4. Integrate a feature in the program where users can provide command-line arguments to specify the input script file and set the required voice modulation parameters - (Not Started)
5. Use a context parser to read a given script, identify the character speaking, and generate the speech in the character's voice - (Not Started)

Current instruction for you:
Develop a basic script that can convert text scripts to spoken dialogue using any language or library you prefer. Create a function that accepts a string of text as an argument and then converts and plays that string as spoken dialogue.
