scribe:
Current documentation stored in user_documentation.txt:
File name: extract_phonetic_data.py
Content: This script includes a placeholder function named "extract_phonetic_data" intended for phonetic data extraction from .wav files. It takes a file path as its argument, but currently it only returns a dummy phonetic symbol as the actual extraction has not been implemented yet.
******

******
File name: access_directory_script.py
Content: This is a Python script (~access_directory_script.py) for accessing the directory located at "C:/Program Files (x86)/Steam/steamapps/common/Umineko/sound/voice/09". When run, it checks if the specified directory exists and returns a confirmation message.
******
******
File name: extract_phonetic_data.py
Content: This Python script (~extract_phonetic_data.py) houses the 'extract_sound_samples' function, to isolate phonetic data from the provided .wav file. Currently, the function only opens the file and the actual extraction process has not been implemented yet. The file opening process includes error handling and will raise a custom 'FileOpeningError' located in the "exceptions.py" script if any issues occur.
******

******
File name: exceptions.py
Content: This Python file (~exceptions.py) includes a custom exception class 'FileOpeningError'. This exception is thrown when there are errors opening files, such as the file not being found or other input-output problems.
******

******
File name: extract_phonetic_data.py
Content: The Python script (~extract_phonetic_data.py) now imports the defined exceptions and includes improved error handling. In the function 'extract_sound_samples' if the file does not exist or there are input-output issues while opening the file, a 'FileOpeningError' is raised. However, the function is yet to include the logic to process and extract sound samples.
******
******
File name: extract_phonetic_data.py
Content: The script (~extract_phonetic_data.py) features an updated extract_sound_samples() function, now able to process and isolate phonetic sounds from files using the 'librosa' library. This includes processing the audio file, converting to mono, and splitting it into frames. A spectral centroid value is calculated for each frame, and any frames with a higher value are stored as 'phonetic_sounds'. The function raises a 'FileOpeningError' for error related to file opening and a 'SoundProcessingError' if any other exceptions occur during sound processing.
******
******

Fetch: None
Message: I will write the requested Python script to access and read audio files from the specified directory. I will use os, glob, and soundfile libraries for the task.

File name: read_audio_files.py
Code: 
```python
import os
import glob
import soundfile as sf

def read_audio_files(directory):
    # os.path.join provided for file path compatibility
    directory_path = os.path.join(directory, '*.wav') 

    audio_files = glob.glob(directory_path)

    for audio_file in audio_files:
        data, samplerate = sf.read(audio_file)
        # Do something with data and samplerate

# Define the directory path
directory = "C:/Program Files (x86)/Steam/steamapps/common/Umineko/sound/voice/09"

# Call the function
read_audio_files(directory)
```
