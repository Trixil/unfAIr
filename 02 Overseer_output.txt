02 Overseer:
To-do:
1. Construct the text-to-speech processing engine that translates user's text inputs into synthesized vocal outputs - Not Started
2. Write a script that can categorize words into phonetic components - Not Started
3. Make use of voice samples from the voice directory to learn and mimic a particular character's voice - Not Started
4. Combine the scripts provided with executable instructions given to the user - Not Started

Current instruction for you:
Start the construction of the text-to-speech processing engine that will convert user's text inputs into synthesized vocal outputs. Make sure to include the necessary libraries and dependencies in the initial stage itself. Show the skeleton of the code with a comment about each step you include.
02 Overseer:
To-do:
1. Construct the text-to-speech processing engine that translates user's text inputs into synthesized vocal outputs - In Progress
2. Write a script that can categorize words into phonetic components - Not Started
3. Make use of voice samples from the voice directory to learn and mimic a particular character's voice - Not Started
4. Combine the scripts provided with executable instructions given to the user - Not Started

Current instruction for you:
Now, write a script that can break down words into their phonetic components. Include functionality where the script can identify individual phonemes in a given word. Our main target here is to be able to analyze individual sounds to later mimic them with the voice samples we have. Do remember to document each step with comments.
02 Overseer:
Current instruction for you:
Begin writing the code related to task 2, the construction of the script for categorizing words into their phonetic components. Use the provided code as a basis for development, and then save the complete script as "phonetic_components_analyzer.py". The function within the script should be named "phonetic_components". Make sure to download the required NLTK resources (CMU Pronouncing Dictionary), initialize the dictionary, and then use it in the given function. If the word doesn't exist in the dictionary, the function should return "Word not found in CMU Pronunciation Dictionary." 

To-do:
1. Construct the text-to-speech processing engine that translates user's text inputs into synthesized vocal outputs - In Progress
2. Write a script that can categorize words into phonetic components - Started
3. Make use of voice samples from the voice directory to learn and mimic a particular character's voice - Not Started
4. Combine the scripts provided with executable instructions given to the user - Not Started
